#define X_STEP_PIN         54
#define X_DIR_PIN          55
#define X_ENABLE_PIN       38

#define Y_STEP_PIN         60
#define Y_DIR_PIN          61
#define Y_ENABLE_PIN       56

#define Z_STEP_PIN         46
#define Z_DIR_PIN          48
#define Z_ENABLE_PIN       62
#include <Servo.h>
// // ultra sound sensor
// #include "NewPing.h"

// // Hook up HC-SR04 with Trig to Arduino Pin 8, Echo to Arduino pin 10
// #define TRIGGER_PIN 8
// #define ECHO_PIN 10

// // Maximum distance we want to ping for (in centimeters).
// #define MAX_DISTANCE 400	

// // NewPing setup of pins and maximum distance.
// NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);

Servo myservo1;  // create servo object to control a servo
Servo myservo3;
Servo myservo4;
Servo myservo5;

String receivedData;
int commaIndex;
int r=1000;
int pos=1;
int speed=500;
int pos1=50;
int pos3=25;
int pos4=80;
int pos5=110; 
int counterz=0;
int countery=0;
int counterx=0;
int stop=10;
unsigned long currentMillis;
unsigned long previousMillis = 0;
unsigned long previousMillis2 = 0;
String last=" ";

void XAxisRight()
{
   for(int x = 0; x < r; x++)
  {
   digitalWrite(X_DIR_PIN, LOW);
    digitalWrite(X_STEP_PIN, HIGH);
    delayMicroseconds(speed);
    digitalWrite(X_STEP_PIN, LOW);
    delayMicroseconds(speed);
      
  }
}


void XAxisLeft()
{
     for(int x = 0; x < r; x++)
  {
   digitalWrite(X_DIR_PIN, HIGH);
    digitalWrite(X_STEP_PIN, HIGH);
    delayMicroseconds(speed);
    digitalWrite(X_STEP_PIN, LOW);
    delayMicroseconds(speed);
      
      }
}


void YAxisForward()
{
  digitalWrite(Y_DIR_PIN, HIGH);
   for(int y = 0; y < r; y++)
  {
    digitalWrite(Y_STEP_PIN, HIGH);
    delayMicroseconds(speed);
    digitalWrite(Y_STEP_PIN, LOW);
    delayMicroseconds(speed);
  }
}


void YAxisBack()
{
  digitalWrite(Y_DIR_PIN, LOW);
   for(int y = 0; y < r; y++)
  {
    digitalWrite(Y_STEP_PIN, HIGH);
    delayMicroseconds(speed);
    digitalWrite(Y_STEP_PIN, LOW);
    delayMicroseconds(speed);
  }
}



void ZAxisUp()
{    
  digitalWrite(Z_DIR_PIN, HIGH);
  for(int z = 0; z < r; z++)
  {
    digitalWrite(Z_STEP_PIN, HIGH);
    delayMicroseconds(speed);
    digitalWrite(Z_STEP_PIN, LOW);
    delayMicroseconds(speed);
} }


void ZAxisDown()
{ 
  digitalWrite(Z_DIR_PIN, LOW);
  for(int z = 0; z < r; z++)
  {
    digitalWrite(Z_STEP_PIN, HIGH);
    delayMicroseconds(speed);
    digitalWrite(Z_STEP_PIN, LOW);
    delayMicroseconds(speed);
}
}
void setup() {
  Serial.begin(115200);

  myservo1.attach(23);
  myservo3.attach(16);
  myservo4.attach(25);
  myservo5.attach(17);

  pinMode(3, OUTPUT); //for pump
  pinMode(X_STEP_PIN  , OUTPUT);
  pinMode(X_DIR_PIN    , OUTPUT);
  pinMode(X_ENABLE_PIN   , OUTPUT);
  
  pinMode(Y_STEP_PIN  , OUTPUT);
  pinMode(Y_DIR_PIN    , OUTPUT);
  pinMode(Y_ENABLE_PIN    , OUTPUT);
  
  pinMode(Z_STEP_PIN  , OUTPUT);
  pinMode(Z_DIR_PIN    , OUTPUT);
  pinMode(Z_ENABLE_PIN    , OUTPUT);

   digitalWrite(X_ENABLE_PIN    , LOW);
    digitalWrite(Y_ENABLE_PIN    , LOW);
    digitalWrite(Z_ENABLE_PIN    , LOW);

}


void loop() {

    // if(sonar.ping_cm()>15){
    //   //random movement
    // }
    // else{
      // Serial.println("Received Data");
      // delay(1000);
    if (Serial.available() > 0) {
      // pump
        // currentMillis = millis ();
        // if ((currentMillis - previousMillis) >= (1000)) {
        //   digitalWrite(3, LOW); // turn on pump
        //       }
        // if ((currentMillis - previousMillis) >= (2000)) {
        //   digitalWrite(3, HIGH); //turn off pump
        //         previousMillis = currentMillis;
        //     }

        String receivedData = Serial.readStringUntil("\n");
        Serial.println("Received Data:");
        Serial.println(receivedData);
        if (receivedData=="stable"){
          Serial.println(last);
        }
        char *token;
        token = strtok(const_cast<char*>(receivedData.c_str()), ",");
        
        // Save each token into separate variables
        String first = String(token); //speed
        token = strtok(NULL, ",");
        String second = String(token); //incline left right
        token = strtok(NULL, ",");
        String third = String(token); //incline down up
        token = strtok(NULL, ",");
        String fourth = String(token); // YAxisBack for back , YAxisForward for forward
        token = strtok(NULL, ",");
        String fifth = String(token); // pos.. XAxisLeft for right move, ZAxisUp for up

          if (first == "low" ) { 
              r=1000;
              pos=1;
              }
          if (first == "medium" ) { 
              r=1500;
              pos=3;
              }
          if (first == "high" ) { 
              r=2000;
              pos=6;
            }
            if (fifth == "rightpos" || second=="rightincline" ) {
              if (counterx<=stop && counterx>=-stop) {
              XAxisLeft();
              counterx++;
            }
            }
              if (fifth == "uprightpos" || second=="leftincline") { 
              if (counterx<=stop && counterx>=-stop) {
              XAxisLeft();
              counterx++;
              }
              delay(100);
              if (counterz<=stop && counterz>=-stop) {
              ZAxisUp(); 
              counterz++;
              }
            }
              if (fifth == "uppos" ||  third== "upincline") { 
               if (counterz<=stop && counterz>=-stop) {
              ZAxisUp(); 
              counterz++;
              }
              }
              if (third== "downincline") { 
              if (counterz<=stop && counterz>=-stop) {
              ZAxisDown(); 
              counterz--;
              }
              }

              if (fourth == "back" ) { 
              if (countery<=5 && countery>=5){
              YAxisBack();
              countery--;
                }
              }
              
              if (fourth == "forward" ) { 
              if (countery<=5 && countery>=5){
              YAxisForward();
              countery++;
                }
              }

        if(second=="leftincline"){
        if (pos1 >= 0 && pos1 < 100 ) { // pos50 for right pos190 for left
          // in steps of 1 degree
          pos1 += pos;
          myservo1.write(pos1);   

          delay(100);                       // waits 15ms for the servo to reach the position
        }
        }
        if(second=="rightincline"){
        if (pos1 <= 100 && pos1 > 0) { // 50 for right pos190 for left
          pos1 -= pos;
          myservo1.write(pos1);   
                    // tell servo to go to position in variable 'pos'
          delay(100);                       // waits 15ms for the servo to reach the position
        }

        }
        if(third== "downincline"){
        if (pos3 >= 45 && pos3 < 135 ) { // 170 for down 80 for up
          // in steps of 1 degree
          pos3 += pos;
          myservo3.write(pos3);   

          delay(100);                       // waits 15ms for the servo to reach the position
        }
        }
        if(third== "upincline"){
        if (pos3 <= 135 && pos3 > 45) { // goes from 180 degrees to 0 degrees
          pos3 -= pos;
          myservo3.write(pos3);   
                    // tell servo to go to position in variable 'pos'
          delay(100);                       // waits 15ms for the servo to reach the position
        }
        }
          if (first == "downtry") { 
              if (pos5 >= 50 && pos5 < 270 ) {
              pos5 +=20 ; // needs calibration of an eqation to calculate 
              myservo5.write(pos5); //the servo angle + or - from the given pixel length 
              } 
                 
            }

            if (first== "down") { 
              if (pos5 >= 50 && pos5 < 270 ) {
                  pos5 +=20 ;
              myservo5.write(pos5); 
              } 
              
                last="donedown";
                Serial.println(last);
                }
            
            if (first == "right") {
              if (pos4 >= 0 && pos4 < 50 ) { 
              pos4 -=5 ;
              myservo4.write(pos4); 
              }  
                last="doneright";
                Serial.println(last);
            }
            if (first == "right1") { 
              if (pos4 >= 0 && pos4 < 50 ) { 
              pos4 -=5 ;
              myservo4.write(pos4);
              } 
                last="doneright1";
                Serial.println(last);
            }
             if (first == "rightfinal") { 
              if (pos4 >= 0 && pos4 < 50 ) { 
              pos4 -=5 ;
              myservo4.write(pos4);
              } 
                last="donefinal";
                Serial.println(last);
            }
            if (first == "up") { 
              if (pos5 <= 270 && pos5 > 50) {
            pos5 -=20 ;
              myservo5.write(pos5);
              }  
                last="doneup";
                Serial.println(last);
            }
            if (first == "upfinal" ) {
              if (pos5 <= 270 && pos5 > 50) { 
              pos5 -=20 ;
              myservo5.write(pos5);
               }  
                last="donefinal";
                Serial.println(last);
            }
            if (first == "downfinal") { 
              if (pos5 >= 50 && pos5 < 270 ) {
              pos5 +=20 ;
              myservo5.write(pos5); 
              }
              last="donefinal";
                Serial.println(last);
            }

    }
    // }
}
